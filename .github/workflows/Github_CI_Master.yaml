name: CI

on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
    branches: [master, develop, qa-master]
  pull_request_review:
    types: [edited, dismissed]
    branches: [master, develop, qa-master]
  workflow_dispatch:

env:
  GITHUB_HEAD_NAME: $GITHUB_HEAD_REF
  sonartoken: ${{ secrets.SONARQUBE_TOKEN }}
  sonarurl: ${{ secrets.SONARURL }}

jobs:
  # ✅ Detect Changed Files
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      UI: ${{ steps.filter.outputs.UI }}
      customapi: ${{ steps.filter.outputs.customapi }}
      processors: ${{ steps.filter.outputs.processors }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Detect Changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            UI:
              - 'UI/src/**'
            customapi:
              - 'customapi/src/**'
            processors:
              - 'processors/**'

  # ✅ UI Build & Testing
  ui_ci:
    runs-on: ubuntu-latest
    needs: detect_changes
    if: needs.detect_changes.outputs.UI == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies & Build UI
        run: |
          cd UI
          sudo chmod -R 777 /usr/local/lib/node_modules
          sudo npm cache clean --force
          sudo npm install
          sudo npm install -g @angular/cli@14.2.6
          sudo npm run build

      - name: Run UI Unit Tests
        run: |
          cd UI
          sudo npm install --save-dev @angular-devkit/build-angular@14.2.10
          sudo ng test --code-coverage

      - name: SonarQube Analysis - UI
        run: |
          cd UI
          sudo chmod -R 777 /usr/local/lib/node_modules
          echo "sonar.branch.name=${{ env.GITHUB_HEAD_NAME }}" >> sonar-project.properties
          echo "sonar.host.url=${{ secrets.SONARQUBE_HOST }}" >> sonar-project.properties
          echo "sonar.login=${{ secrets.SONARQUBE_TOKEN }}" >> sonar-project.properties
          npm install -D sonarqube-scanner
          npm run sonar

      - name: Check SonarQube Quality Gate - UI
        run: |
          chmod +x SonarDelay.sh
          ./SonarDelay.sh ./UI/.scannerwork/report-task.txt

  # ✅ CustomAPI Build & SonarQube Analysis
  customapi_ci:
    runs-on: ubuntu-latest
    needs: detect_changes
    if: needs.detect_changes.outputs.customapi == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-      

      - name: Build & Test CustomAPI
        run: mvn clean install -Pcustomapi -Ddockerfile.skip=true

      - name: SonarQube Analysis - CustomAPI
        run: |
          mvn sonar:sonar -Dsonar.projectKey=ENGINEERING.KPIDASHBOARD.CUSTOMAPI \
            -Dsonar.projectName=ENGINEERING.KPIDASHBOARD.CUSTOMAPI \
            -Dsonar.branch.name=${{ env.GITHUB_HEAD_NAME }} \
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} \
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }} -f customapi/pom.xml

      - name: Check SonarQube Quality Gate - CustomAPI
        run: |
          chmod +x SonarDelay.sh
          ./SonarDelay.sh ./customapi/target/sonar/report-task.txt

  # ✅ Building & Testing Processors (Single Job, Multiple Steps)
  processors_ci:
    runs-on: ubuntu-latest
    needs: detect_changes
    if: needs.detect_changes.outputs.processors == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-      

      - name: Build & Test Jira Processor
        run: mvn clean install -Pjira-processor -Ddockerfile.skip=true

      - name: Build & Test Azure Board Processor
        run: mvn clean install -Pazure-board-processor -Ddockerfile.skip=true

      - name: Build & Test DevOps Processor
        run: mvn clean install -Pdevops-processor -Ddockerfile.skip=true

      - name: Build & Test Azure Pipeline Repo Processor
        run: mvn clean install -Pazure-pipeline-repo -Ddockerfile.skip=true

      - name: SonarQube Analysis - Processors
        run: |
          mvn sonar:sonar -Dsonar.projectKey=ENGINEERING.KPIDASHBOARD.PROCESSORS \
            -Dsonar.projectName=ENGINEERING.KPIDASHBOARD.PROCESSORS \
            -Dsonar.branch.name=${{ env.GITHUB_HEAD_NAME }} \
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} \
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }} -f processors/pom.xml

      - name: Check SonarQube Quality Gate - Processors
        run: |
          chmod +x SonarDelay.sh
          ./SonarDelay.sh ./processors/target/sonar/report-task.txt
  
  GitHub_CI_Complete:
    needs: [processors_ci, ui_ci, customapi_ci]
    if: always()  # Ensures this job runs even if some jobs were skipped
    runs-on: ubuntu-latest
    steps:
      - name: CI Completed Successfully
        run: echo "All relevant jobs have completed successfully."

  # # ✅ Send Email Notification on Failure
  # notify_on_failure:
  #   runs-on: ubuntu-latest
  #   needs: [ui_ci, customapi_ci, processors_ci]
  #   if: failure()
  #   steps:
  #     - name: Send Email Notification
  #       uses: dawidd6/action-send-mail@v2
  #       with:
  #         server_address: ''
  #         server_port: ''
  #         username: ''
  #         password: ''
  #         subject: "${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}"
  #         body: |
  #           - ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
  #           - CI triggered by: ${{ github.actor }}
  #           - Click for details: https://github.com/KnowHow/actions/runs/${{ github.run_id }}
  #         to: ''
  #         from: GitHub CI
