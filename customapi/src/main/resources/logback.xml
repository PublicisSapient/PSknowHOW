<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Copyright 2014 CapitalOne, LLC.
  Further development Copyright 2022 Sapient Corporation.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<configuration>
<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
    <encoder>
      <pattern>%d %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>
 <appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- rollover daily -->
      <fileNamePattern>logs/ps-customapi-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy
            class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!-- or whenever the file size reaches 100MB -->
        <maxFileSize>20MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
    <!--<jsonGeneratorDecorator class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>-->
            <providers>
                <pattern>
			      <pattern>
			        {
			          "app":"CustomAPI"
			        }
			      </pattern>
			    </pattern>

                <timestamp>
                    <fieldName>createdTime</fieldName>
                    <!-- TODO - should be long format -->
                    <timeZone>UTC</timeZone>
                </timestamp>

                <loggerName>
                    <fieldName>logger</fieldName>
                </loggerName>

                <logLevel>
                    <fieldName>level</fieldName>
                </logLevel>

                <callerData>
                    <classFieldName>class</classFieldName>
                    <methodFieldName>method</methodFieldName>
                    <lineFieldName>line</lineFieldName>
                    <fileFieldName>file</fileFieldName>
                </callerData>

                <threadName>
                    <fieldName>thread</fieldName>
                </threadName>

                <mdc/>

                <arguments>
                    <includeNonStructuredArguments>false</includeNonStructuredArguments>
                </arguments>

                <stackTrace>
                    <fieldName>stack</fieldName>
                </stackTrace>

                <message>
                    <fieldName>message</fieldName>
                </message>
            </providers>
        </encoder>
 </appender>
 <appender name="CustomApiAuditLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- rollover daily -->
      <fileNamePattern>logs/customapi-audit-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!-- or whenever the file size reaches 100MB -->
        <maxFileSize>20MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
    <jsonGeneratorDecorator class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
            <providers>
                <pattern>
			      <pattern>
			        {
			          "app":"CustomAPIRequestResponse"
			        }
			      </pattern>
			    </pattern>

                <timestamp>
                    <fieldName>timestamp</fieldName>
                    <!-- TODO - should be long format -->
                    <timeZone>UTC</timeZone>
                </timestamp>

                <loggerName>
                    <fieldName>logger</fieldName>
                </loggerName>

                <logLevel>
                    <fieldName>level</fieldName>
                </logLevel>

                <callerData>
                    <classFieldName>class</classFieldName>
                    <methodFieldName>method</methodFieldName>
                    <lineFieldName>line</lineFieldName>
                    <fileFieldName>file</fileFieldName>
                </callerData>

                <threadName>
                    <fieldName>thread</fieldName>
                </threadName>

                <mdc/>

                <arguments>
                    <includeNonStructuredArguments>false</includeNonStructuredArguments>
                </arguments>

                <stackTrace>
                    <fieldName>stack</fieldName>
                </stackTrace>

                <message>
                    <fieldName>msg</fieldName>
                </message>
            </providers>
        </encoder>
 </appender>
 <logger name="com.publicissapient.kpidashboard.apis" level="INFO">
   <appender-ref ref="ROLLING" />
  </logger>
 <logger name="RequestResponseAuditLogging" level="INFO">
    <appender-ref ref="CustomApiAuditLog" />
  </logger>
  <root level="INFO">
      <appender-ref ref="STDOUT" />
  </root>
</configuration>
