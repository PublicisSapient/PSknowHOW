#datasource
#NeededToUpdate
spring.datasource.url=jdbc:postgresql://authdb:5432/authNauth
spring.datasource.username=authdb
#NeededToUpdate
spring.datasource.password=
spring.jpa.properties.hibernate.default_schema=auth
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

server.port=8787
logging.level.root=info
logging.logType=both
server.servlet.context-path=/api
spring.main.allow-circular-references = true
server.tomcat.redirect-context-root = false
spring.main.allow-bean-definition-overriding=true

#auth keys
auth.authenticationProviders=SAML,STANDARD
auth.accountLockedThreshold=5
auth.expirationTime=172800000
auth.accountLockedPeriod=30
#Purpose of properties :secret used for JWT token decode
#possible values : secret key
#NeededToUpdate
auth.secret=

#Purpose of properties : central auth backend url
#possible values : http://authnauth:8787 , http://localhost:8787
#used in/for : saml login , redirect and validate request
#NeededToUpdate
auth.baseUrl=http://authnauth:8787

#Purpose of properties : central auth frontend url/domain Name
#possible values : http://localhost:3000
#used in/for : back to frontend redirect
#NeededToUpdate
auth.baseUiUrl=

#Purpose of properties : saml login details start

#NeededToUpdate : Saml info update Start
auth.holdingEntityId=
auth.assertingEntityId=
auth.alias=
auth.samlLoginUrl=
#NeededToUpdate : Saml info update End

spring.security.saml2.serviceProvider.alias=${auth.alias}
spring.security.saml2.serviceProvider.signMetadata=false
spring.security.saml2.serviceProvider.signRequests=false
spring.security.saml2.serviceProvider.encryptAssertions=false
spring.security.saml2.serviceProvider.singleLogoutEnabled=true
spring.security.saml2.serviceProvider.wantAssertionsSigned=true
spring.security.saml2.serviceProvider.entityId=${auth.holdingEntityId}
spring.security.saml2.serviceProvider.basePath=${auth.baseUrl}${server.servlet.context-path}
spring.security.saml2.serviceProvider.nameIds=urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
spring.security.saml2.serviceProvider.keys.active.name=sp-signing-key-1
spring.security.saml2.serviceProvider.providers[0].alias=${auth.alias}
spring.security.saml2.serviceProvider.providers[0].skipSslValidation=true
spring.security.saml2.serviceProvider.providers[0].metadata=${auth.samlLoginUrl}
spring.security.saml2.serviceProvider.providers[0].authenticationRequestBinding=urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

auth.samlMaxAuthenticationAgeMillis=604800000
auth.nameId=urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
auth.logoutEmailQueryParam=email
auth.loginCallback=${auth.baseUrl}${server.servlet.context-path}/saml/sp/discovery?idp=${auth.assertingEntityId}
auth.logoutCallback=${auth.baseUrl}${server.servlet.context-path}/saml/sp/logout?${auth.logoutEmailQueryParam}=%s
auth.defaultRedirectToAfterLogout=${auth.baseUrl}${server.servlet.context-path}/hello
auth.defaultRedirectToAfterLogin=${auth.baseUiUrl}/login/status
auth.loginSuccessPageFormat=${auth.baseUiUrl}/status?authToken=%s
#Purpose of properties :  saml login details end

#Purpose of properties : property used for user token expiration before verification
#possible values : number [1-20]
#used in/for : user verification functionality - In days
verifyUser.tokenExpiryDays=30

#Purpose of properties : property used to expire forgot password
#possible values : number [1-20]
#used in/for : forgot password functionality - In Minute
forgotPassword.expiryInterval=30

#Set this property only for local setup(eg. 8787). Empty for server.
forgotPassword.serverPort=
#uiHost will be "localhost" for local setup and empty for server
forgotPassword.uiHost=

#Set this property only for local setup (eg. 3000). Empty for server.
forgotPassword.uiPort=

#Purpose of properties : property used to reset link open via mail and redirect to UI
ui.resetPath = /reset-password?resetToken=

#Purpose of properties : property used to reset link open via mail and redirect to UI
ui.registerPath = /register

#Purpose of properties : property used to verify user via mail and redirect to UI
ui.validateUser = /api/verifyUser?token=

#Kafka related Properties - Start
#NeededToUpdate
spring.kafka.producer.bootstrap-servers=kafka:9092
kafka.mailtopic=mail-topic

#Kafka related Properties - End

#Notification properties -Start

#NeededToUpdate
#Purpose of properties : property used to provide if any instance want to disable mail
#possible values : true for mail sent , false for disable
#used in/for : sent mail
notification.switch=true

#Purpose of properties : property used to provide smtp service sent mail
#possible values : development, production
#used in/for : sent mail
notification.env=development

#NeededToUpdate
#Purpose of properties : property used to send mail via kafka or smtp
#possible values : true for smtp , false for kafka
#used in/for : sent mail
flag.mailWithoutKafka=true

#####mail key and template mapping#####
auth.mailTemplate.Access_Request=Access_Request_Template
auth.mailemplate.Submit_Feedback=Feedback_Submit_Template
auth.mailTemplate.Approve_User_Success=Approve_User_Success_Template
auth.mailTemplate.Approve_User_Reject=Approve_User_Reject_Template
auth.mailTemplate.Pre_Approval=Pre_Approval_Template
auth.mailTemplate.Forgot_Password=Forgot_Password_Template
auth.mailTemplate.User_Verification=User_Verification_Template
auth.mailTemplate.User_Verification_Failed=User_Verification_Failed_Template

#####mail notification Subject#####
auth.notificationSubject.accessRequest=New access request for KnowHOW
auth.notificationSubject.approvalRequest=Approval Request for KnowHow
auth.notificationSubject.preApproval=KnowHOW: New user request
auth.notificationSubject.failedApproval=KnowHOW: User Approval Rejected
auth.notificationSubject.forgotPassword=Password Reset Request
auth.notificationSubject.userVerification=User Verification Request
auth.notificationSubject.userVerificationFailed=User Verification Token Expired

#Notification properties -End

ssoLogin=false

#http only cookie -start
auth.authCookieDuration=3600
auth.authCookieHttpOnly=true
auth.authCookieSecured=true
auth.authCookieSameSite=SameSite=None
auth.subDomainCookie=true
#Purpose of property : auth service is on then added to parent domain
#possible values : example.com , tools.publicis.sapient.com , localhost for local system
#NeededToUpdate
auth.domain=
#http only cookie -end

#Purpose of properties : property used to provide valid origin
#possible values : String [a-z, A-Z, 0-9]
#used in/for : CORS
#NeededToUpdate
auth.corsFilterValidOrigin=localhost,127.0.0.1,ui

#Purpose of properties : expose push data api token expiry days limit
#possible values : number [1-365]
#used in/for : expose push data api
auth.exposeAPITokenExpiryDays=90
exposeAPITokenExpiryDays=90
