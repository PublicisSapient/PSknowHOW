trigger:
- azure-devops

parameters:
- name: deploymentOptions
  type: string
  default: 'API'
  values:
  - 'API'
  - 'UI'
  - 'Processor'
  - 'ALL'
- name: Environment
  type: string
  default: 'uat'
  values:
  - 'uat'
  - 'prod'

stages:
- stage: API_Deploy
  condition: eq('${{ parameters.deploymentOptions }}', 'API')

  jobs:
  - job: API_Deploy
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      overrideValues: ''

    steps:
    - checkout: self

    - script: |
        echo "Selected Deployment Options: ${{ parameters.deploymentOptions }}"
        echo "${{ parameters.Environment }}"
        echo "Deploying API..."
        # Add API deployment steps
        echo "Deploying Helm charts for API..."
        # Extract version from pom.xml
        # export VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Version from pom.xml: $VERSION"
        echo "##vso[task.setvariable variable=overrideValues]image.tag=$VERSION"
        echo "Version from pom.xml: $VERSION"
        echo "##vso[task.setvariable variable=overrideValues]$VERSION"
        # Add Helm deployment steps for API
        # Example: helm upgrade --install customapi ./Kubernetes/knowhow-helm/knowhow-customapi
    # - task: HelmDeploy@0
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceConnection: '${{ parameters.Environment }}-knowhow-k8s-sc'
    #     namespace: '${{ parameters.Environment }}-knowhow'
    #     command: 'upgrade'
    #     chartType: 'FilePath'
    #     chartPath: './Kubernetes/knowhow-helm/knowhow-customapi'
    #     releaseName: 'customapi'
    #     overrideValues: 'image.tag=$(Build.BuildNumber)'
    #     valueFile: './Kubernetes/knowhow-helm/knowhow-customapi/values.yaml'
    #   displayName: 'Deploy API'

- stage: UI_Deploy
  condition: eq('${{ parameters.deploymentOptions }}', 'UI')

  jobs:
  - job: UI_Deploy
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    - script: |
        echo "Selected Deployment Options: ${{ parameters.deploymentOptions }}"
        echo "${{ parameters.Environment }}"
        echo "Deploying UI..."
        # Add UI deployment steps
        echo "Deploying Helm charts for UI..."
        ls
        # Add Helm deployment steps for UI
        # Example: helm upgrade --install customapi ./Kubernetes/knowhow-helm/knowhow-customapi

    - task: HelmDeploy@0
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: '${{ parameters.Environment }}-knowhow-k8s-sc'
        namespace: '${{ parameters.Environment }}-knowhow'
        command: 'ls'
        chartType: 'Name'
        # chartName: 'zookeeper'
        # releaseName: '<ReleaseName>'
        # overrideValues: '<OverrideValues>'
        valueFile: './Kubernetes/knowhow-helm/knowhow-customapi'
      displayName: 'Deploy Helm Charts for API'

- stage: Processor_Deploy
  condition: eq('${{ parameters.deploymentOptions }}', 'Processor')

  jobs:
  - job: Processor_Deploy
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    - script: |
        echo "Selected Deployment Options: ${{ parameters.deploymentOptions }}"
        echo "${{ parameters.Environment }}"
        echo "Deploying Processor..."
        # Add Processor deployment steps
        echo "Deploying Helm charts for Processor..."
        ls
        # Add Helm deployment steps for Processor
        # Example: helm upgrade --install customapi ./Kubernetes/knowhow-helm/knowhow-customapi

    - task: HelmDeploy@0
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: '${{ parameters.Environment }}-knowhow-k8s-sc'
        namespace: '${{ parameters.Environment }}-knowhow'
        command: 'ls'
        chartType: 'Name'
        #chartName: 'zookeeper'
        # releaseName: '<ReleaseName>'
        # overrideValues: '<OverrideValues>'
        valueFile: './Kubernetes/knowhow-helm/knowhow-customapi'
      displayName: 'Deploy Processor'

- stage: Deploy_ALL
  condition: eq('${{ parameters.deploymentOptions }}', 'ALL')

  jobs:
  - job: Deploy_ALL
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    - script: |
        echo "Selected Deployment Options: ${{ parameters.deploymentOptions }}"
        echo "${{ parameters.Environment }}"
        echo "Deploying ALL..."
        # Add deployment steps for all options
      displayName: 'Deploy ALL'
