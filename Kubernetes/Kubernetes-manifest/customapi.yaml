---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customapi
  namespace: stage-knowhow
  labels:
    app: customapi
spec:
  replicas: 2
  selector:
    matchLabels:
      app: customapi
  template:
    metadata:
      labels:
        app: customapi
    spec:
      # initContainers:
      # - name: init-mongodb
      #   image: busybox:1.28
      #   command: ['sh', '-c', "until nslookup mongodb.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mongodb; sleep 2; done"]
      # - name: init-customapi
      #   image: busybox:1.28
      #   command: ['sh', '-c', "until nslookup customapi.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for customapi; sleep 2; done"]
      containers:
        - name: customapi
          image: speedtools.azurecr.io/knowhow-customapi:10.0.0-SNAPSHOT
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "1Gi"
              cpu: "0.5"
          # readinessProbe:
          #   tcpSocket:
          #     port: 8080
          #   initialDelaySeconds: 10   # Wait for 10 seconds before starting probes
          #   periodSeconds: 5          # Check every 5 seconds
          # livenessProbe:
          #   tcpSocket:
          #     port: 8080
          #   initialDelaySeconds: 15
          #   periodSeconds: 20
          env:
            - name: spring.data.mongodb.uri
              valueFrom:
                secretKeyRef:
                  name: stage-knhdbconnectionstring
                  key: stage-knhdbconnectionstring
            # - name: spring.data.mongodb.host
            #   valueFrom:
            #     secretKeyRef:
            #       name: stage-secretproviderclass
            #       key: stage-knhdbhost
            - name: repoToolAPIKey
              valueFrom:
                secretKeyRef:
                  name: stage-repo-tool-api-key
                  key: stage-repo-tool-api-key
            - name: aesEncryptionKey
              valueFrom:
                secretKeyRef:
                  name: knowhowaesencryptionkeynew
                  key: knowhowaesencryptionkeynew
            - name: auth.secret
              valueFrom:
                secretKeyRef:
                  name: knowhow-auth-secret
                  key: knowhow-auth-secret
            - name: spring.data.mongodb.username
              valueFrom:
                secretKeyRef:
                  name: stage-knhdbusername
                  key: stage-knhdbusername
            - name: spring.data.mongodb.password
              valueFrom:
                secretKeyRef:
                  name: stage-knhdbpassword
                  key: stage-knhdbpassword
            - name: exposed_api_key
              valueFrom:
                secretKeyRef:
                  name: exposed-api-key
                  key: exposed-api-key
            - name: auth.resourceAPIKey
              valueFrom:
                secretKeyRef:
                  name: auth-resourceapikeys
                  key: auth-resourceapikeys
            - name: mongock.migration-scan-package
              value: com.publicissapient.kpidashboard.apis.mongock.upgrade
            - name: mongock.start-system-version
              value: 8.1.0
            - name: mongock.end-system-version
              value: 9.0.0
            - name: auth.centralAuthBaseURL
              value: "https://stage-authnauth.tools.publicis.sapient.com"
            - name:  notification.switch
              value: "true"
            - name:  auth.subDomainCookie
              value: "true"
            - name:  auth.domain
              value: tools.publicis.sapient.com

          envFrom:
          - configMapRef:
              name: knowhow-config  
          volumeMounts:
            - name: knowhow-secrets-store
              mountPath: "/mnt/stage-secrets-store"
              readOnly: true
      volumes:
        - name: knowhow-secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "stage-secretproviderclass"
---
apiVersion: v1
kind: Service
metadata:
  name: customapi
  namespace: stage-knowhow
spec:
  selector:
    app: customapi
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      