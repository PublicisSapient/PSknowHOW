1. Get the application URL by running these commands:

{{- if and .Values.authNauthApp.enabled (not .Values.ingress.enabled) }}
{{- if contains "NodePort" .Values.service.uitype }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "knowhow-chart.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "Application URL: http://$NODE_IP:$NODE_PORT"
{{- else if contains "LoadBalancer" .Values.service.uitype }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status by running:
          kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "knowhow-chart.fullname" . }}
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "knowhow-chart.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo "Application URL: http://$SERVICE_IP:{{ .Values.service.port }}"
{{- else if contains "ClusterIP" .Values.service.uitype }}
  {{- if .Values.authNauthApp.enabled }}
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name=authnauth-ui,app.kubernetes.io/instance=authnauth" -o jsonpath="{.items[0].metadata.name}")
  {{- else }}
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name=knowhow-ui,app.kubernetes.io/instance=knowhow" -o jsonpath="{.items[0].metadata.name}")
  {{- end }}
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80
{{- else }}
  echo "Service type not recognized. Please check your configuration."
{{- end }}
{{- else if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  echo "Application URL: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}"
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.uitype }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "knowhow-chart.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "Application URL: http://$NODE_IP:$NODE_PORT"
{{- else if contains "LoadBalancer" .Values.service.uitype }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status by running:
          kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "knowhow-chart.fullname" . }}
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "knowhow-chart.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo "Application URL: http://$SERVICE_IP:{{ .Values.service.port }}"
{{- else if contains "ClusterIP" .Values.service.uitype }}
  {{- if .Values.authNauthApp.enabled }}
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name=authnauth-ui,app.kubernetes.io/instance=authnauth" -o jsonpath="{.items[0].metadata.name}")
  {{- else }}
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name=knowhow-ui,app.kubernetes.io/instance=knowhow" -o jsonpath="{.items[0].metadata.name}")
  {{- end }}
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80
{{- else }}
  echo "Service type not recognized. Please check your configuration."
{{- end }}
