# Default values for knowhow-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1 # This is for all the pods in the application.

image:
  apirepository: psknowhow/customapi
  uirepository: psknowhow/ui
  mongorepository: psknowhow/mongodb
  jirarepository: psknowhow/jira-processor
  devopsrepository: psknowhow/devops-processor
  azurepipelinerepository: psknowhow/azure-pipeline-repo
  azureboardrepository: psknowhow/azure-board-processor
  authapirepo: psknowhow/authnauth
  authuirepo: psknowhow/authnauth-ui
  authscmdbrepo: psknowhow/postgres-auth-scm
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  knowhowtag: "12.0.0"
  mongodbtag: "5.0.18-rootuser"
  authtag: "2.0.0"
  authscmdbtag: "2.0.0"

## Enable or disable applications: Jira, DevOps, Azure Pipeline, Azure Board, MongoDB

JiraApp:
  enabled: true

DevOpsApp:
  enabled: true

AzurepiPelinerepoApp:
  enabled: true

AzureBoardApp:
  enabled: true

mongodb:
  enabled: true
  volumeType: "hostPath" # Options: "hostPath", "efs", "azureDisk" or leave empty to use an existing PVC specified in pvcName
  storage: "16Gi"
  accessMode: "ReadWriteOnce" # Options: "ReadWriteMany", "ReadWriteOnce"

  # HostPath-specific options
  hostPath:
    path: "/data/mongodb" # Host path for local storage

  # AWS EFS-specific options
  efs:
    volumeHandle: "<your-efs-filesystem-id>" # Replace with your AWS EFS FileSystemId
    storageClassName: ""  # Specify the storage class name for EFS (optional)
  
  # AzureDisk-specific options
  azureDisk:
    volumeHandle: "/subscriptions/<subscriptionID>/resourceGroups/<resourceGroupName>/providers/Microsoft.Compute/disks/<diskName>"
    storageClassName: "" # Specify the storage class name for azDisk

  pvcName: "existing-pvc-name-here"  # Specify the name of an existing PVC to use. Leave mongodb.volumeType empty if using an existing PVC. (optional)

authNauthApp:
  enabled: true

authNauthNSCMDB:
  enabled: true
  volumeType: "hostPath" # Options: "hostPath", "efs", "azureDisk" or leave empty to use an existing PVC specified in pvcName
  storage: "16Gi"
  accessMode: "ReadWriteOnce" # Options: "ReadWriteMany", "ReadWriteOnce"

  # HostPath-specific options
  hostPath:
    path: "/data/authscmdb" # Host path for local storage

  # AWS EFS-specific options
  efs:
    volumeHandle: "<your-efs-filesystem-id>" # Replace with your AWS EFS FileSystemId
    storageClassName: ""  # Specify the storage class name for EFS (optional)
  
  # AzureDisk-specific options
  azureDisk:
    volumeHandle: "/subscriptions/<subscriptionID>/resourceGroups/<resourceGroupName>/providers/Microsoft.Compute/disks/<diskName>"
    storageClassName: "" # Specify the storage class name for azDisk

  pvcName: "existing-pvc-name-here"  # Specify the name of an existing PVC to use. Leave mongodb.volumeType empty if using an existing PVC. (optional)


env:
  ## UI initialization settings
  - name: DNS_SSL
    value: "<Your IP/DNS Address>"  # LoadBalancer IP or DNS 
  - name: API_HOST
    value: "customapi"             #Custom API's K8s Service Name
  - name: API_PORT
    value: "8080"                   #Customapi port number

  ### Uncomment and update the details below only during an upgrade
  - name: mongock.start-system-version
    value: "0.0.0" # Uncomment if needed
  - name: mongock.end-system-version
    value: "0.0.0" # Uncomment if needed. Find the latest version here: https://hub.docker.com/repository/docker/psknowhow/customapi/tags

  # Installation-specific settings
  - name: mongock.migration-scan-package
    value: "com.publicissapient.kpidashboard.apis.mongock.installation" # Set to 'installation' for a new install, or 'upgrade' for an upgrade.
  - name: forgotPassword.uiHost
    value: "<DNS>" # DNS of the Knowhow server without https://
  - name: corsFilterValidOrigin
    value: "<DNS>" # DNS of the Knowhow server without https://
  - name: spring.data.mongodb.uri
    value: "mongodb://devuser:devpassword123@mongodb:27017/kpidashboard" # Pass the application MongoDB username, password and mongo hostname . URL-encode special characters in the password.
  - name: aesEncryptionKey
    value: "<aesEncryptionKey>" # AES encryption key. Generate using a tool like https://acte.ltd/utils/randomkeygen (min length - 8).
  - name: auth.secret
    value: "C0GNAIDS8upDNnkE" # Passphrase for signing JWT tokens (min length - 4).
  - name: versionnumber
    value: "12.0.0" # Find the latest version number here: https://hub.docker.com/repository/docker/psknowhow/customapi/tags
  
  # MongoDB Credentials is used when mongodb.enabled
  - name: MONGODB_ADMIN_USER
    value: "admin"                        # Pass the admin user name
  - name: MONGODB_ADMIN_PASS
    value: "admin123"                     # Pass the admin password
  - name: MONGODB_APPLICATION_DATABASE
    value: "kpidashboard"
  - name: MONGODB_APPLICATION_USER
    value: "devuser"                      # Pass the application user name, if you are changing this pass the value in "spring.data.mongodb.uri"
  - name: MONGODB_APPLICATION_PASS
    value: "devpassword123"               # Pass the application user password, if you are changing this pass the value in "spring.data.mongodb.uri"


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  uitype: ClusterIP
  backendtype: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
